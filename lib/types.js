"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FuelType = exports.BoostedWithdrawal = exports.BoostedRelease = exports.BoostedHodl = exports.BoostedBurn = exports.BoostedSend = exports.BoosterFuel = exports.BoosterPayload = exports.EIP712Domain = exports.BoostTag = exports.ZERO = exports.SECONDS_PER_MONTH = void 0;
const bn_js_1 = __importDefault(require("bn.js"));
exports.SECONDS_PER_MONTH = 2628000;
exports.ZERO = new bn_js_1.default(0);
var BoostTag;
(function (BoostTag) {
    BoostTag[BoostTag["Send"] = 0] = "Send";
    BoostTag[BoostTag["Burn"] = 1] = "Burn";
    BoostTag[BoostTag["Hodl"] = 2] = "Hodl";
    BoostTag[BoostTag["Release"] = 3] = "Release";
    BoostTag[BoostTag["Withdrawal"] = 4] = "Withdrawal";
})(BoostTag = exports.BoostTag || (exports.BoostTag = {}));
exports.EIP712Domain = [
    { name: "name", type: "string" },
    { name: "version", type: "string" },
    { name: "chainId", type: "uint256" },
    { name: "verifyingContract", type: "address" }
];
exports.BoosterPayload = [
    { name: "booster", type: "address" },
    { name: "timestamp", type: "uint64" },
    { name: "nonce", type: "uint64" },
    { name: "isLegacySignature", type: "bool" },
];
exports.BoosterFuel = [
    { name: "dubi", type: "uint96" },
    { name: "unlockedPrps", type: "uint96" },
    { name: "lockedPrps", type: "uint96" },
    { name: "intrinsicFuel", type: "uint96" },
];
exports.BoostedSend = [
    { name: "tag", type: "uint8" },
    { name: "sender", type: "address" },
    { name: "recipient", type: "address" },
    { name: "amount", type: "uint256" },
    { name: "data", type: "bytes" },
    { name: "fuel", type: "BoosterFuel" },
    { name: "boosterPayload", type: "BoosterPayload" }
];
exports.BoostedBurn = [
    { name: "tag", type: "uint8" },
    { name: "account", type: "address" },
    { name: "amount", type: "uint256" },
    { name: "data", type: "bytes" },
    { name: "fuel", type: "BoosterFuel" },
    { name: "boosterPayload", type: "BoosterPayload" },
];
exports.BoostedHodl = [
    { name: "tag", type: "uint8" },
    { name: "hodlId", type: "uint24" },
    { name: "amountPrps", type: "uint96" },
    { name: "duration", type: "uint16" },
    { name: "dubiBeneficiary", type: "address" },
    { name: "prpsBeneficiary", type: "address" },
    { name: "creator", type: "address" },
    { name: "fuel", type: "BoosterFuel" },
    { name: "boosterPayload", type: "BoosterPayload" }
];
exports.BoostedRelease = [
    { name: "tag", type: "uint8" },
    { name: "id", type: "uint24" },
    { name: "creator", type: "address" },
    { name: "prpsBeneficiary", type: "address" },
    { name: "fuel", type: "BoosterFuel" },
    { name: "boosterPayload", type: "BoosterPayload" }
];
exports.BoostedWithdrawal = [
    { name: "tag", type: "uint8" },
    { name: "id", type: "uint24" },
    { name: "creator", type: "address" },
    { name: "prpsBeneficiary", type: "address" },
    { name: "fuel", type: "BoosterFuel" },
    { name: "boosterPayload", type: "BoosterPayload" }
];
var FuelType;
(function (FuelType) {
    FuelType[FuelType["NONE"] = 0] = "NONE";
    FuelType[FuelType["UNLOCKED_PRPS"] = 1] = "UNLOCKED_PRPS";
    FuelType[FuelType["LOCKED_PRPS"] = 2] = "LOCKED_PRPS";
    FuelType[FuelType["DUBI"] = 3] = "DUBI";
    FuelType[FuelType["AUTO_MINTED_DUBI"] = 4] = "AUTO_MINTED_DUBI";
})(FuelType = exports.FuelType || (exports.FuelType = {}));
//# sourceMappingURL=data:application/json;base64,